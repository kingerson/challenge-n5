services:
    zookeeper:
     image: confluentinc/cp-zookeeper:latest
     container_name: zookeeper
     environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
     ports:
      - 22181:2181
     networks:
      - app_network
    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka
      depends_on:
        - zookeeper
      ports:
        - 9092:9092
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CREATE_TOPICS: "test-topic:1:3"
      networks:
        - app_network
      healthcheck:
        test: ["CMD-SHELL", "nc -z kafka 9092 || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 5
    kafka-consumer-worker:
      build:
        context: ./KafkaConsumer
        dockerfile: Dockerfile
      container_name: kafka-consumer-worker
      environment:
        KAFKA_BROKER: kafka:9092
      depends_on:
        kafka:
          condition: service_healthy
      networks:
        - app_network
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
      container_name: elasticsearch
      environment:
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - ES_JAVA_OPTS=-Xms512m -Xmx512m
        - xpack.security.enabled=false
        - xpack.security.transport.ssl.enabled=false
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
        - "9200:9200"
      networks:
        - app_network
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 5
    kibana:
      image: docker.elastic.co/kibana/kibana:8.9.1
      container_name: kibana
      environment:
        - SERVER_NAME=kibana.local
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        - xpack.security.enabled=false
        - xpack.security.transport.ssl.enabled=false
      ports:
        - "5601:5601"
      depends_on:
        - elasticsearch
      networks:
        - app_network
    sqlserverdev:
      image: "mcr.microsoft.com/mssql/server:latest"
      container_name: sqlserverdev
      ports:
        - "1433:1433"
      environment:
        MSSQL_SA_PASSWORD: "Facil123."
        ACCEPT_EULA: "Y"
      networks:
      - app_network
    api:
      container_name: template-api
      build:
        context: ./clean-api-template
        target: run
        args:
          VERSION_PREFIX: 1.0.0.0
          VERSION_SUFFIX: docker
      ports:
          - "8081:80"
      environment:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: false
        ConnectionStrings__DefaultConnection: "Server=sqlserverdev,1433;Database=DbTest;Persist Security Info=False;User Id=sa;Password=Facil123.;TrustServerCertificate=True"
        KafkaConfig__BootstrapServers: "kafka:9092"
        ElasticSearchConfig__Url: "http://elasticsearch:9200"
        ElasticSearchConfig__DefaultIndex: "permissions"
      depends_on:
        - sqlserverdev
        - elasticsearch
        - kafka
      networks:
        - app_network

networks:
  app_network:
    driver: bridge